<footer>
    <p class="copyright">Â© 2025 Create by Yuelin Wen</p>
</footer>
</body>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous">
    </script>
<script>
    document.addEventListener("DOMContentLoaded", function () {

        let mainMapElement = document.getElementById("map");
        if (mainMapElement) {
            let restaurantsData = JSON.parse(document.getElementById("restaurantsData").value);

            if (!restaurantsData || restaurantsData.length === 0) {
                console.warn("No restaurant data available for the map.");
                return;
            }


            var map = L.map('map').setView([40.7128, -74.0060], 12);

            L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
                maxZoom: 13,
                attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
            }).addTo(map);

            restaurantsData.forEach(restaurant => {
                if (restaurant.address && restaurant.address.coord && restaurant.address.coord.length === 2) {
                    let lat = restaurant.address.coord[1];
                    let lon = restaurant.address.coord[0];

                    L.marker([lat, lon]).addTo(map)
                        .bindPopup(`<strong>${restaurant.name}</strong><br>${restaurant.address.building} ${restaurant.address.street}, ${restaurant.address.zipcode}<br>Borough: ${restaurant.borough}`)
                        .openPopup();
                } else {
                    console.warn(`Missing coordinates for restaurant: ${restaurant.name}`);
                }
            });
        }

        let detailMapElement = document.getElementById("detail-map");
        if (detailMapElement) {
            let restaurantsData = JSON.parse(document.getElementById("restaurantsData").value);
            var detailMap = L.map('detail-map').setView([restaurantsData.address.coord[1], restaurantsData.address.coord[0]], 12);

            L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
                maxZoom: 13,
                attribution: '&copy; OpenStreetMap contributors'
            }).addTo(detailMap);

            L.marker([restaurantsData.address.coord[1], restaurantsData.address.coord[0]]).addTo(detailMap)
                .bindPopup(`<strong>${restaurantsData.name}</strong><br>${restaurantsData.address.building} ${restaurantsData.address.street}, ${restaurantsData.address.zipcode}<br>Borough: ${restaurantsData.borough}`)
                .openPopup();

        }

        document.getElementById("commentForm").addEventListener("submit", function (event) {
            event.preventDefault();

            let comment = document.getElementById("commentText").value.trim();
            let grade = document.getElementById("gradeSelect").value;
            let restaurantId = document.getElementById("restaurantId").value;

            if (!comment || !grade) {
                alert("Please enter a comment and select a grade.");
                return;
            }

            axios.put(`/restaurants/${restaurantId}/comment`, {
                comment: comment,
                grade: grade
            })
                .then(response => {
                    alert("Comment added successfully!");
                    location.reload();
                })
                .catch(error => {
                    console.log("Error: " + (error.response ? error.response.data.error : error.message));
                });
        });
    });
</script>
<style>
    body {
        font-family: "Roboto", serif;
        align-items: center;

    }

    footer {
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 5em;
        color: grey;
    }

    img {
        object-fit: cover;
    }

    .nav-header {
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: start;

    }

    #title {
        font-family: "Sue Ellen Francisco", serif;
        font-weight: 400;
        font-style: normal;
        font-size: 30px;
    }

    #logo {
        width: 2em;
    }

    .main-container {
        display: flex;
        flex-direction: row;
    }

    .restaurants-container {
        width: 70%;
        display: flex;
        flex-direction: row;
    }

    .map-container {
        width: 30%;
    }

    .sidebar {
        width: 20%;
    }

    .list-div {
        width: 80%;
        display: flex;
        flex-direction: column;
    }


    .list-group {
        height: 90%;
    }

    .list-item-img {
        width: 30%;
        height: 200px;
    }

    .restaurant-item {
        display: flex;
        flex-direction: row;
    }

    .list-item-content {
        width: 70%;
        padding: 10px;
    }

    .restaurant-item-name {
        font-family: "Sue Ellen Francisco", serif;
        font-weight: 400;
        font-style: normal;
        font-size: 48px;
    }

    .page-navbar {
        margin-top: auto;
        padding-top: 20px;
        display: flex;
        justify-content: center;
    }

    .num-per-page-div {
        padding-left: 1%;
    }





    /* detail.css */
    .detail-main-body {
        width: 100%;
        display: flex;
        flex-direction: column;
        /* cross axis */
        align-items: center;
        /* main axis  */
        justify-content: center;
        margin-top: 50px;
    }

    .detail-image {
        height: 500px;
        /* object-fit: cover; */
    }

    .detail-list-item-content {
        margin-top: 100px;
        text-align: center;
    }

    .detail-map-container {
        width: 90%;
        height: 600px;
        margin-top: 20px;
    }

    #detail-map {
        width: 100%;
        height: 100%;
    }

    #exampleFormControlTextarea1 {
        width: 500px;
    }

    #map {
        height: 96%;
        width: 100%;
    }
</style>

</html>